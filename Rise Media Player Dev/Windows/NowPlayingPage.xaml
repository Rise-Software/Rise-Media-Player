<Page
    x:Class="Rise.App.Views.NowPlayingPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="using:Rise.App.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:nouac14="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,14)"
    xmlns:skuc="using:SimpleKit.WindowsRuntime.UI.Controls"
    xmlns:uac14="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,14)"
    xmlns:uc="using:Rise.App.UserControls"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:visualizers="using:Rise.App.Visualizers"
    d:Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    d:DesignHeight="300"
    d:DesignWidth="320"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True"
    Loaded="OnPageLoaded"
    Unloaded="OnPageUnloaded"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <x:Double x:Key="ThumbnailBrushPointerInOpacity">0.5</x:Double>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <x:Double x:Key="ThumbnailBrushPointerInOpacity">0.25</x:Double>
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <x:Double x:Key="ThumbnailBrushPointerInOpacity">0</x:Double>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <SolidColorBrush x:Key="MediaTransportControlsPanelBackground" Color="Transparent" />

            <conv:TimeSpanToString x:Key="TimeToStr" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="RootGrid" ColumnSpacing="12">
        <Grid.Background>
            <ImageBrush x:Name="ThumbnailBrush" Stretch="UniformToFill">
                <ImageBrush.ImageSource>
                    <BitmapImage UriSource="{x:Bind MPViewModel.PlayingItem.Thumbnail, Mode=OneWay}" />
                </ImageBrush.ImageSource>
            </ImageBrush>
        </Grid.Background>

        <Border
            x:Name="BlurBrushBorder"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
            <Border.Background>
                <media:BackdropBlurBrush Amount="10" />
            </Border.Background>
        </Border>

        <visualizers:BloomView
            x:Name="BloomVis"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            x:Load="False"
            Background="#7F000000"
            Visibility="Collapsed" />

        <skuc:ExtendedTitleBar
            x:Name="TitleBar"
            Height="40"
            Margin="92,0,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Canvas.ZIndex="1" />

        <Grid
            Margin="4"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Canvas.ZIndex="2">
            <Button
                Width="40"
                Height="36"
                Click="OnExitButtonClick"
                Style="{StaticResource TransparentButtonStyle}">
                <FontIcon
                    x:Name="ExitIcon"
                    FontSize="16"
                    Glyph="&#xE112;" />
            </Button>
        </Grid>

        <uc:RiseMediaPlayerElement
            x:Name="MainPlayer"
            MaxWidth="1000"
            Margin="0,-3"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            Canvas.ZIndex="0"
            MediaPlayerVisibility="Collapsed">
            <uc:RiseMediaPlayerElement.TransportControls>
                <uc:RiseMediaTransportControls
                    x:Name="PlayerControls"
                    DisplayItemVisibility="Visible"
                    IsEqualizerButtonEnabled="True"
                    IsEqualizerButtonVisible="True"
                    IsFullWindowButtonVisible="True"
                    IsNextTrackButtonVisible="True"
                    IsPreviousTrackButtonVisible="True"
                    IsQueueButtonEnabled="True"
                    IsQueueButtonVisible="True"
                    IsRepeatEnabled="True"
                    IsShuffleButtonChecked="{x:Bind MPViewModel.ShuffleEnabled, Mode=TwoWay}"
                    IsShuffleEnabled="True"
                    IsVolumeButtonVisible="False"
                    ShowAndHideAutomatically="False"
                    Style="{StaticResource NowPlayingTransportControlsStyle}"
                    TimelineDisplayMode="Minimal">
                    <uc:RiseMediaTransportControls.QueueFlyout>
                        <Flyout>
                            <uc:DefaultQueueFlyout Width="300" Height="300" />
                        </Flyout>
                    </uc:RiseMediaTransportControls.QueueFlyout>

                    <uc:RiseMediaTransportControls.DisplayItem>
                        <Grid
                            x:Name="InfoGrid"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            x:DefaultBindMode="OneWay"
                            ColumnSpacing="12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Border
                                x:Name="ThumbBorder"
                                Width="300"
                                Height="300"
                                Margin="0,0,0,4"
                                HorizontalAlignment="Left"
                                ui:Effects.Shadow="{StaticResource StrongShadow}"
                                BorderBrush="{StaticResource CardStrokeColorDefaultBrush}"
                                BorderThickness="1"
                                CornerRadius="12"
                                Visibility="Collapsed">
                                <Border.Background>
                                    <ImageBrush>
                                        <ImageBrush.ImageSource>
                                            <BitmapImage
                                                DecodePixelHeight="300"
                                                DecodePixelType="Logical"
                                                DecodePixelWidth="300"
                                                UriSource="{x:Bind MPViewModel.PlayingItem.Thumbnail, Mode=OneWay}" />
                                        </ImageBrush.ImageSource>
                                    </ImageBrush>
                                </Border.Background>
                            </Border>

                            <TextBlock
                                x:Name="TitleText"
                                Grid.Row="1"
                                d:Text="Title"
                                FontSize="20"
                                FontWeight="SemiBold"
                                HorizontalTextAlignment="Center"
                                MaxLines="2"
                                Text="{x:Bind MPViewModel.PlayingItem.Title}" />
                            <TextBlock
                                x:Name="SubtitleText"
                                Grid.Row="2"
                                Margin="0,4,0,0"
                                d:Text="Subtitle"
                                FontSize="16"
                                FontWeight="SemiBold"
                                HorizontalTextAlignment="Center"
                                MaxLines="1"
                                Opacity="0.6"
                                Style="{StaticResource BodyTextBlockStyle}"
                                Text="{x:Bind MPViewModel.PlayingItem.Subtitle}" />
                        </Grid>
                    </uc:RiseMediaTransportControls.DisplayItem>
                </uc:RiseMediaTransportControls>
            </uc:RiseMediaPlayerElement.TransportControls>
        </uc:RiseMediaPlayerElement>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ArtStates">
                <VisualState x:Name="DefaultState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind UseImmersiveArt.Equals(x:False), Mode=OneWay}" />
                    </VisualState.StateTriggers>

                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames
                            EnableDependentAnimation="True"
                            Storyboard.TargetName="ThumbnailBrush"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="{ThemeResource ThumbnailBrushPointerInOpacity}">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="InfoGrid"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="BlurBrushBorder"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <VisualState x:Name="ImmersiveState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind UseImmersiveArt, Mode=OneWay}" />
                    </VisualState.StateTriggers>

                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames
                            EnableDependentAnimation="True"
                            Storyboard.TargetName="ThumbnailBrush"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="InfoGrid"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="BlurBrushBorder"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="VisualizerStates">
                <VisualState x:Name="NoVisualizerState" />
                <VisualState x:Name="LineVisualizerState">
                    <VisualState.Setters>
                        <Setter Target="LineVis.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="BloomVisualizerState">
                    <VisualState.Setters>
                        <Setter Target="BloomVis.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="SelectedModeStates">
                <VisualState x:Name="CompactOverlayState">
                    <VisualState.Setters>
                        <uac14:Setter Target="ExitIcon.Glyph" Value="&#xEE47;" />
                        <nouac14:Setter Target="ExitIcon.Glyph" Value="&#xE944;" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="MediumSizeState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="260" MinWindowWidth="260" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="PlayerControls.TimelineDisplayMode" Value="Full" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="LargeSizeState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="600" MinWindowWidth="720" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="BlurBrushBorder.Background" Value="{ThemeResource AcrylicInAppFillColorDefaultBrush}" />

                        <Setter Target="MainPlayer.HorizontalAlignment" Value="Left" />
                        <Setter Target="MainPlayer.Width" Value="700" />

                        <Setter Target="PlayerControls.HorizontalControlsAlignment" Value="Left" />
                        <Setter Target="PlayerControls.TimelineDisplayMode" Value="Full" />

                        <Setter Target="InfoGrid.ColumnDefinitions[1].Width" Value="300" />
                        <Setter Target="InfoGrid.HorizontalAlignment" Value="Left" />
                        <Setter Target="InfoGrid.VerticalAlignment" Value="Bottom" />
                        <Setter Target="InfoGrid.Padding" Value="16,0,0,8" />

                        <Setter Target="TitleText.HorizontalTextAlignment" Value="Left" />
                        <Setter Target="TitleText.Padding" Value="8,0,0,0" />
                        <Setter Target="SubtitleText.HorizontalTextAlignment" Value="Left" />
                        <Setter Target="SubtitleText.Padding" Value="8,0,0,0" />
                        <Setter Target="ThumbBorder.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="HeightStates">
                <VisualState x:Name="MediumHeightState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="260" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="TitleText.FontSize" Value="24" />
                        <Setter Target="TitleText.FontWeight" Value="Bold" />
                        <Setter Target="SubtitleText.FontSize" Value="18" />
                        <Setter Target="SubtitleText.FontWeight" Value="SemiBold" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="WidthStates">
                <VisualState x:Name="MediumWidthState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="260" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="PlayerControls.IsVolumeButtonVisible" Value="True" />
                        <Setter Target="PlayerControls.IsRepeatButtonVisible" Value="True" />
                        <Setter Target="PlayerControls.IsShuffleButtonVisible" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
