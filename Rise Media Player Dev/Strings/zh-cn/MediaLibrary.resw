<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add.Content" xml:space="preserve">
    <value>添加文件夹</value>
  </data>
  <data name="AddAccount.Description" xml:space="preserve">
    <value>安全地登录到您的服务</value>
  </data>
  <data name="AddAccount.Title" xml:space="preserve">
    <value>添加账号</value>
  </data>
  <data name="AddFolders.Label" xml:space="preserve">
    <value>添加媒体文件夹</value>
  </data>
  <data name="AddFolders.ToolTipService.ToolTip" xml:space="preserve">
    <value>添加媒体文件夹</value>
  </data>
  <data name="AdditionalH.Text" xml:space="preserve">
    <value>其他设置</value>
  </data>
  <data name="AddLocation.Title" xml:space="preserve">
    <value>当你添加一个新的媒体位置时进行扫描</value>
  </data>
  <data name="Automatic.Description" xml:space="preserve">
    <value>启用定期扫描和智能事件扫描。</value>
  </data>
  <data name="Automatic.Title" xml:space="preserve">
    <value>自动扫描</value>
  </data>
  <data name="AutoScanMedia.Description" xml:space="preserve">
    <value>当应用程序打开时，按指定时间段进行扫描。</value>
  </data>
  <data name="AutoScanMedia.Title" xml:space="preserve">
    <value>定期扫描</value>
  </data>
  <data name="ChooseFolders.Description" xml:space="preserve">
    <value>选择我们寻找你的音乐文件的位置。</value>
  </data>
  <data name="ChooseFolders.Title" xml:space="preserve">
    <value>添加/删除音乐库文件夹</value>
  </data>
  <data name="Deletion.Title" xml:space="preserve">
    <value>移除本地媒体时：</value>
  </data>
  <data name="Device" xml:space="preserve">
    <value>从设备中删除</value>
  </data>
  <data name="DeviceConnect.Title" xml:space="preserve">
    <value>连接可移动设备或驱动器时进行扫描</value>
  </data>
  <data name="Devices.Text" xml:space="preserve">
    <value>设备</value>
  </data>
  <data name="DisableLocal.Title" xml:space="preserve">
    <value>禁用所有本地文件和设备</value>
  </data>
  <data name="DisableOnline.Title" xml:space="preserve">
    <value>禁用所有在线服务和网络</value>
  </data>
  <data name="Done.Content" xml:space="preserve">
    <value>全部清除</value>
  </data>
  <data name="EventsScan.Description" xml:space="preserve">
    <value>在一个或多个事件发生后扫描新的媒体。</value>
  </data>
  <data name="EventsScan.Title" xml:space="preserve">
    <value>智能事件扫描</value>
  </data>
  <data name="FilesAdd.Title" xml:space="preserve">
    <value>在向媒体源添加文件时进行扫描</value>
  </data>
  <data name="FolderInfo.Text" xml:space="preserve">
    <value>我们已经在你的默认用户文件夹中寻找你的媒体文件。你可以添加额外的文件夹，我们可以用这些文件夹来填充你的资料库。</value>
  </data>
  <data name="Folders" xml:space="preserve">
    <value>媒体源</value>
  </data>
  <data name="LastFM.Text" xml:space="preserve">
    <value>Last.fm</value>
  </data>
  <data name="ManageFolders.Description" xml:space="preserve">
    <value>视频、音乐以及更多</value>
  </data>
  <data name="ManageFolders.Title" xml:space="preserve">
    <value>管理本地媒体文件夹</value>
  </data>
  <data name="ManualScan.Description" xml:space="preserve">
    <value>扫描你已经添加的文件夹，寻找要添加到库的音乐和视频。</value>
  </data>
  <data name="ManualScan.Title" xml:space="preserve">
    <value>手动扫描</value>
  </data>
  <data name="OnlineH.Text" xml:space="preserve">
    <value>在线媒体和服务</value>
  </data>
  <data name="OnlineServices.Text" xml:space="preserve">
    <value>在线服务</value>
  </data>
  <data name="OnlyApp" xml:space="preserve">
    <value>只从应用程序中删除</value>
  </data>
  <data name="Open.Title" xml:space="preserve">
    <value>打开应用程序时扫描</value>
  </data>
  <data name="OwnH.Text" xml:space="preserve">
    <value>本地媒体和设备</value>
  </data>
  <data name="Ripping.Description" xml:space="preserve">
    <value>选择你想在翻录光盘时发生什么。</value>
  </data>
  <data name="Ripping.Title" xml:space="preserve">
    <value>光盘翻录选项</value>
  </data>
  <data name="SeparateLocal.Description" xml:space="preserve">
    <value>为你的本地音乐创建一个单独的侧边栏条目，而不是将在线和本地音乐合并在一起。</value>
  </data>
  <data name="SeparateLocal.Title" xml:space="preserve">
    <value>在侧边栏分割本地和在线库</value>
  </data>
  <data name="ShufflePlaylist.Text" xml:space="preserve">
    <value>随机播放列表</value>
  </data>
  <data name="Streaming.Text" xml:space="preserve">
    <value>流媒体服务</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="VChooseFolders.Description" xml:space="preserve">
    <value>选择我们寻找你的视频文件的位置。</value>
  </data>
  <data name="VChooseFolders.Title" xml:space="preserve">
    <value>添加/删除视频库文件夹</value>
  </data>
</root>