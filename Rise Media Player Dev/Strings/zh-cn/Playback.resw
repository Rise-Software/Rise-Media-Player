<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Crossfade.Description" xml:space="preserve">
    <value>融合你的音乐曲目的结尾和开头。</value>
  </data>
  <data name="Crossfade.Title" xml:space="preserve">
    <value>交叉淡化</value>
  </data>
  <data name="Duration0" xml:space="preserve">
    <value>没有交叉淡化</value>
  </data>
  <data name="Duration10s" xml:space="preserve">
    <value>10 秒</value>
  </data>
  <data name="Duration3s" xml:space="preserve">
    <value>3 秒</value>
  </data>
  <data name="Duration5s" xml:space="preserve">
    <value>5 秒</value>
  </data>
  <data name="EQ.Description" xml:space="preserve">
    <value>根据你的媒体类型，选择不同的声音配置文件。</value>
  </data>
  <data name="EQ.Title" xml:space="preserve">
    <value>均衡器</value>
  </data>
  <data name="Flyouts.Title" xml:space="preserve">
    <value>替换系统音量和回放的浮出控件</value>
  </data>
  <data name="Gapless.Description" xml:space="preserve">
    <value>我们将立即转到你的下一个轨道，无需等待。</value>
  </data>
  <data name="Gapless.Title" xml:space="preserve">
    <value>无缝切换</value>
  </data>
  <data name="GeneralH.Text" xml:space="preserve">
    <value>通用</value>
  </data>
  <data name="GoDevice.Title" xml:space="preserve">
    <value>当你连接一个音频设备时，转到现在播放的状态</value>
  </data>
  <data name="MatchRes" xml:space="preserve">
    <value>始终匹配分辨率</value>
  </data>
  <data name="MusicH.Text" xml:space="preserve">
    <value>音乐</value>
  </data>
  <data name="NowPlaying.Description" xml:space="preserve">
    <value>选择在你的 "正在播放 "用户界面上显示的内容。</value>
  </data>
  <data name="NowPlaying.Title" xml:space="preserve">
    <value>自定义正在播放</value>
  </data>
  <data name="NowPlayingH.Text" xml:space="preserve">
    <value>正在播放和系统浮出控件</value>
  </data>
  <data name="Scaling.Description" xml:space="preserve">
    <value>调整你的视频如何根据窗口的大小进行缩放。</value>
  </data>
  <data name="Scaling.Title" xml:space="preserve">
    <value>缩放比例</value>
  </data>
  <data name="StreamingQuality.Description" xml:space="preserve">
    <value>更改视频分辨率和音乐比特率。</value>
  </data>
  <data name="StreamingQuality.Title" xml:space="preserve">
    <value>管理流媒体质量</value>
  </data>
  <data name="VideoH.Text" xml:space="preserve">
    <value>视频</value>
  </data>
  <data name="WindowSize" xml:space="preserve">
    <value>根据窗口大小调整比例</value>
  </data>
</root>