<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Albums" xml:space="preserve">
    <value>专辑</value>
  </data>
  <data name="AppearanceH.Text" xml:space="preserve">
    <value>应用外观</value>
  </data>
  <data name="Artists" xml:space="preserve">
    <value>艺术家</value>
  </data>
  <data name="AtAGlance.Description" xml:space="preserve">
    <value>添加小部件，使你的体验更加个性化。</value>
  </data>
  <data name="AtAGlance.Title" xml:space="preserve">
    <value>定制你的开始页</value>
  </data>
  <data name="ChooseColor.Title" xml:space="preserve">
    <value>选择你的窗口颜色</value>
  </data>
  <data name="ChooseTheme.Title" xml:space="preserve">
    <value>选择你的颜色</value>
  </data>
  <data name="CompactMode.Description" xml:space="preserve">
    <value>减少整体边距和填充，以显示更多内容。使得侧边栏组可以折叠。</value>
  </data>
  <data name="CompactMode.Title" xml:space="preserve">
    <value>紧凑模式</value>
  </data>
  <data name="CuratedPlaylists.Description" xml:space="preserve">
    <value>播放列表是根据你的习惯和喜好为你制作的，包括你喜欢的歌曲。</value>
  </data>
  <data name="CuratedPlaylists.Title" xml:space="preserve">
    <value>制作精选的播放列表</value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>暗黑</value>
  </data>
  <data name="DesignPresetsH.Text" xml:space="preserve">
    <value>设计和布局预设</value>
  </data>
  <data name="DesignUnavailable.Description" xml:space="preserve">
    <value>布局预设和自定义主题即将推出。</value>
  </data>
  <data name="DesignUnavailable.Title" xml:space="preserve">
    <value>该功能不可用</value>
  </data>
  <data name="Devices" xml:space="preserve">
    <value>设备</value>
  </data>
  <data name="FullArt.Description" xml:space="preserve">
    <value>这些元素上的角将不再是圆角。</value>
  </data>
  <data name="FullArt.Title" xml:space="preserve">
    <value>显示完整的专辑封面和缩略图</value>
  </data>
  <data name="Genres" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="Header.Text" xml:space="preserve">
    <value>用图标样式、颜色、模式等进行个性化定制，不仅可以使你的体验更加个性化，而且更加方便用户使用。</value>
  </data>
  <data name="History.Title" xml:space="preserve">
    <value>追踪播放历史和使用习惯</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>一览</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>亮度</value>
  </data>
  <data name="LocalVideos" xml:space="preserve">
    <value>全部视频</value>
  </data>
  <data name="NavigationH.Text" xml:space="preserve">
    <value>导航</value>
  </data>
  <data name="NowPlaying" xml:space="preserve">
    <value>列表</value>
  </data>
  <data name="PickUp.Title" xml:space="preserve">
    <value>从你离开的地方继续</value>
  </data>
  <data name="Playlists" xml:space="preserve">
    <value>播放列表</value>
  </data>
  <data name="PrivacyH.Text" xml:space="preserve">
    <value>隐私与建议</value>
  </data>
  <data name="Sidebar" xml:space="preserve">
    <value>侧边栏</value>
  </data>
  <data name="SidebarItems.Description" xml:space="preserve">
    <value>添加/删除侧边栏项目，改变图标风格和一般行为。</value>
  </data>
  <data name="SidebarItems.Title" xml:space="preserve">
    <value>自定义你的侧边栏</value>
  </data>
  <data name="Songs" xml:space="preserve">
    <value>歌曲</value>
  </data>
  <data name="Startup.Description" xml:space="preserve">
    <value>选择启动应用程序时打开的页面。</value>
  </data>
  <data name="Startup.Title" xml:space="preserve">
    <value>启动时</value>
  </data>
  <data name="Streaming" xml:space="preserve">
    <value>流媒体服务</value>
  </data>
  <data name="System" xml:space="preserve">
    <value>使用系统设置</value>
  </data>
  <data name="Tip.Text" xml:space="preserve">
    <value>*紧凑模式的改变在设置完成后才会生效。</value>
  </data>
</root>