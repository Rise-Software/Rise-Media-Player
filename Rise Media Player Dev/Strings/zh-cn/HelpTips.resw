<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddPersonalMusicAndVideos.Title" xml:space="preserve">
    <value>添加你的个人音乐和视频</value>
  </data>
  <data name="Alpha.Text" xml:space="preserve">
    <value>• 这些版本将从微软商店推送

• 播放列表
• 设备支持
• 光盘刻录
• 开始时对12种语言的多语言支持（未完成）。
• 背景中的一些在线服务 - Discord Rich Presence &amp; Last.fm Scrobbling
• 增加了音乐的视图和排序
• 视频索引和播放
• 改进的现在播放体验和队列
• 大改后的 "设置 "用户界面被带入所有版本
• 本地推荐和最近播放的
• 在大多数应用程序中都有Discy。</value>
  </data>
  <data name="AlphaH.Text" xml:space="preserve">
    <value>Pre-Alpha 后期 - Alpha</value>
  </data>
  <data name="Benefits.Text" xml:space="preserve">
    <value>首先，应用程序的早期。

Bloom频道的内部人员可以获得尽可能早的版本。这真的让你有机会看到我们正在进行的工作，并在我们积极进行应用程序的部分工作时提供反馈，这意味着你的反馈意味着很多！当然，它也有缺点。当然，这也不是没有缺点的。与其他用户相比，Bloom Channel内部人员也面临更多的错误和问题。Bloom内部人员还可以使用被标记为 "实验性 "的功能，这意味着我们在这一点上投入的工作很少，或者它们非常不稳定，但还是很有趣的，可以尝试。这些功能在默认情况下是不会被启用的。

Early Access Insiders（以前是Seeding Insiders）可以更早地访问该应用程序，尽管稳定性更高。实验性功能将不提供给该渠道的内部人员。*

*在设置界面中被标记为实验性的功能</value>
  </data>
  <data name="BenefitsH.Text" xml:space="preserve">
    <value>加入内幕计划我可以得到什么好处？</value>
  </data>
  <data name="Beta.Text" xml:space="preserve">
    <value>• 流媒体服务和某种形式的推荐
• 均衡器
• 展示台
• 查找专辑信息
• 光盘翻录
• 网络支持
• 更多内容</value>
  </data>
  <data name="BetaH.Text" xml:space="preserve">
    <value>Beta</value>
  </data>
  <data name="FAQH.Text" xml:space="preserve">
    <value>基础知识</value>
  </data>
  <data name="Features.Title" xml:space="preserve">
    <value>你优先考虑的是什么功能？</value>
  </data>
  <data name="HowTrans.Text" xml:space="preserve">
    <value>如果你想做出贡献或进行翻译，请加入我们的Discord服务器! 链接: https://disboard.org/server/872910570003791922</value>
  </data>
  <data name="HowTransH.Text" xml:space="preserve">
    <value>我如何才能成为贡献者或翻译者？</value>
  </data>
  <data name="Insider.Text" xml:space="preserve">
    <value>当你提交了你的表格。你不需要做其他事情，只需要等待。当下一个版本发布时，你会收到一封邮件，进入我们的Insider Portal，在那里你可以下载新版本的MSIX包。注意：Alpha版本及以上版本将使用微软商店进行发布，但我们选择使用MSIX来发布Pre-Alpha，因为会有很多版本。有些时候，来自两个渠道的内部人员可能会收到相同的版本。这很正常，不用担心</value>
  </data>
  <data name="InsiderH.Text" xml:space="preserve">
    <value>嘿，我是一个内部人士。我怎样才能获得构建？</value>
  </data>
  <data name="InsiderProgram.Title" xml:space="preserve">
    <value>内幕计划，翻译和贡献</value>
  </data>
  <data name="Join.Text" xml:space="preserve">
    <value>只需进入下面的表格并回答问题。选择你的频道，输入你的电子邮件和其他一些东西。 https://bit.ly/rise-insider

祝你测试顺利</value>
  </data>
  <data name="JoinH.Text" xml:space="preserve">
    <value>我如何加入内幕计划？</value>
  </data>
  <data name="PlayingMediaNowPlaying.Title" xml:space="preserve">
    <value>播放媒体和现在播放的</value>
  </data>
  <data name="PreAlpha.Text" xml:space="preserve">
    <value>• 歌曲、专辑、艺术家和流派的索引
• 专辑、艺术家、流派和歌曲浏览量（目前为静态）
• 媒体回放
• 命令栏(基础)
• 用户控制的媒体位置
• 通过设置操纵用户界面
• 音乐的基本元数据控制
• 基本的正在播放用户界面
• 基本属性窗口
• 常见问题帮助部分
• 小范围内的Discy</value>
  </data>
  <data name="PreAlphaH.Text" xml:space="preserve">
    <value>Pre Alpha (将会有许多pre-alpha版本)</value>
  </data>
  <data name="ReleaseDate.Title" xml:space="preserve">
    <value>Rise Media Player何时发布？</value>
  </data>
  <data name="ReleaseInfo.Text" xml:space="preserve">
    <value>目前还没有正式的发布日期。Pre-Alpha 1将于10月21日发布（与Rise Notes同时发布），我们非常高兴终于有了用户的测试! :)

在其他版本方面，我们没有确切的日期给大家，但这是我们的目标（版本可能会提前或推迟发布，取决于功能:

• Pre Alpha 进度 - 2021年10月至12月 (Pre-Alpha 1 是第一个版本)

• Alpha 构建 - 新年（2022年）至2022年3月。 注意：在Alpha过程中，应用程序的演示版本将公开提供，以测试用户界面。

• Beta - 4月-TBD（该版本将从微软商店向所有公众用户提供。 你将不需要成为内幕计划的一部分，尽管你将错过一些功能)</value>
  </data>
  <data name="SortingManagingLibrary.Title" xml:space="preserve">
    <value>分类和管理你的资料库</value>
  </data>
  <data name="WhatDiscy.Description" xml:space="preserve">
    <value>你得看看;)</value>
  </data>
  <data name="WhatDiscy.Title" xml:space="preserve">
    <value>什么是 Discy?</value>
  </data>
</root>