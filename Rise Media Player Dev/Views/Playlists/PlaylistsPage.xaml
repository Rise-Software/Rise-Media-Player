<uc:MediaPageBase
    x:Class="Rise.App.Views.PlaylistsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="using:Rise.App.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:markup="using:Rise.Common.Extensions.Markup"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:uc="using:Rise.App.UserControls"
    xmlns:viewmodels="using:Rise.App.ViewModels"
    d:Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    d:DesignHeight="320"
    d:DesignWidth="500"
    mc:Ignorable="d">

    <uc:MediaPageBase.Resources>
        <conv:NullToBoolean x:Key="NullToBool" />
        <conv:ResourceToString x:Key="StrToRes" />
    </uc:MediaPageBase.Resources>

    <Grid Padding="56,56,56,0" d:Padding="20,12">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <muxc:TeachingTip
            x:Name="DiscyOnPlaylist"
            Title="Group with playlists"
            ActionButtonContent="Learn more"
            CloseButtonContent="Got it!"
            IsLightDismissEnabled="True"
            PlacementMargin="20"
            PreferredPlacement="Auto"
            Subtitle="Put your favourite songs, special songs, your songs, together in a playlist. Give it a description and a title. Then add extra music and remove tracks you're not too sure about. Happy listening!">
            <muxc:TeachingTip.HeroContent>
                <Image Source="/Assets/Branding/discygraphic.png" />
            </muxc:TeachingTip.HeroContent>
        </muxc:TeachingTip>

        <TextBlock
            d:Text="Playlists"
            Style="{StaticResource TitleTextBlockStyle}"
            Text="{x:Bind Label, Converter={StaticResource StrToRes}, ConverterParameter=Sidebar}" />
        <CommandBar
            Grid.Row="1"
            Margin="-12,0"
            HorizontalAlignment="Left"
            Background="Transparent"
            DefaultLabelPosition="Right">
            <AppBarButton
                Click="CreatePlaylistButton_Click"
                Icon="Add"
                Label="New playlist" />

            <AppBarSeparator />

            <AppBarButton
                x:Uid="/Information/Delete"
                Icon="Delete"
                IsEnabled="False"
                Style="{StaticResource AppBarCompactButtonStyle}" />
            <AppBarButton
                x:Uid="/Information/Edit"
                Command="{x:Bind EditItemCommand}"
                CommandParameter="{x:Bind SelectedItem, Mode=OneWay}"
                Icon="Edit"
                IsEnabled="{x:Bind SelectedItem, Converter={StaticResource NullToBool}, Mode=OneWay}"
                Style="{StaticResource AppBarCompactButtonStyle}" />

            <AppBarSeparator />

            <AppBarButton
                Click="ImportPlaylist_Click"
                Icon="OpenFile"
                Label="Import" />

            <AppBarButton
                Icon="Save"
                IsEnabled="False"
                Label="Export" />
        </CommandBar>

        <GridView
            x:Name="MainGrid"
            Grid.Row="2"
            Margin="-56,0"
            Padding="44,0,44,120"
            IsItemClickEnabled="True"
            ItemClick="MainGrid_ItemClick"
            ItemsSource="{x:Bind MediaViewModel.Items}"
            SelectedItem="{x:Bind SelectedItem, Mode=TwoWay}"
            SelectionMode="Single">
            <GridView.ContextFlyout>
                <MenuFlyout Opening="MenuFlyout_Opening">
                    <MenuFlyoutItem
                        x:Uid="/Information/PlayItem"
                        Command="{x:Bind MediaViewModel.PlaySingleItemCommand}"
                        CommandParameter="{x:Bind SelectedItem, Mode=OneWay}"
                        Icon="Play" />

                    <MenuFlyoutItem
                        x:Uid="/MediaLibrary/ShufflePlaylist"
                        Command="{x:Bind MediaViewModel.ShuffleSingleItemCommand}"
                        CommandParameter="{x:Bind SelectedItem, Mode=OneWay}"
                        Icon="Shuffle" />

                    <MenuFlyoutSeparator />

                    <MenuFlyoutItem
                        x:Name="PinPlaylist"
                        Command="{x:Bind SwitchPlaylistPinningStateCommand}"
                        CommandParameter="{x:Bind SelectedItem, Mode=OneWay}"
                        Icon="Pin"
                        Text="{markup:ResourceHelper Name=PinToSidebar}" />

                    <MenuFlyoutItem
                        x:Uid="/Information/Share"
                        Icon="Share"
                        IsEnabled="False" />

                    <MenuFlyoutSeparator />

                    <MenuFlyoutItem
                        x:Uid="/Information/AskDiscy"
                        Click="AskDiscy_Click"
                        Icon="Help" />

                    <MenuFlyoutSeparator />

                    <MenuFlyoutItem
                        Click="DeletePlaylist_Click"
                        Icon="Delete"
                        Text="Delete playlist" />

                    <MenuFlyoutItem
                        x:Uid="/Information/EditPlaylistText"
                        Command="{x:Bind EditItemCommand}"
                        CommandParameter="{x:Bind SelectedItem, Mode=OneWay}"
                        Icon="Edit" />
                </MenuFlyout>
            </GridView.ContextFlyout>

            <GridView.ItemTemplate>
                <DataTemplate x:DataType="viewmodels:PlaylistViewModel">
                    <StackPanel
                        Width="134"
                        Margin="12"
                        Orientation="Vertical"
                        Spacing="2">
                        <Border x:Name="PlaylistThumb" CornerRadius="4">
                            <Image
                                Width="134"
                                Height="134"
                                Stretch="UniformToFill">
                                <Image.Source>
                                    <BitmapImage
                                        DecodePixelHeight="134"
                                        DecodePixelType="Logical"
                                        DecodePixelWidth="134"
                                        UriSource="{x:Bind Icon, Mode=OneWay}" />
                                </Image.Source>
                            </Image>
                        </Border>

                        <StackPanel>
                            <TextBlock
                                Padding="0,7,0,0"
                                MaxLines="1"
                                Style="{StaticResource BaseTextBlockStyle}"
                                Text="{x:Bind Title, Mode=OneWay}"
                                TextWrapping="Wrap"
                                ToolTipService.ToolTip="{x:Bind Title, Mode=OneWay}" />
                            <TextBlock
                                FontWeight="Normal"
                                MaxLines="1"
                                Style="{StaticResource BaseTextBlockStyle}"
                                TextWrapping="Wrap">
                                <Run Text="{x:Bind SongsCount, Mode=OneWay}" /> <Run Text="{x:Bind SongsCountString, Mode=OneWay}" />,
                                <Run Text="{x:Bind VideosCount, Mode=OneWay}" /> <Run Text="{x:Bind VideosCountString, Mode=OneWay}" />
                            </TextBlock>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </GridView.ItemTemplate>
        </GridView>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="PlaylistPinningStates">
                <VisualState x:Name="UnpinnedPlaylistState" />
                <VisualState x:Name="PinnedPlaylistState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind SelectedItem.IsPinned, Mode=OneWay}" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="PinPlaylist.Icon" Value="UnPin" />
                        <Setter Target="PinPlaylist.Text" Value="{markup:ResourceHelper Name=RemoveFromSidebar}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</uc:MediaPageBase>
